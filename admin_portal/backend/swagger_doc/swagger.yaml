swagger: "2.0"
info:
  version: "1.0.0"
  title: "Movie API"
  description: "API documentation for managing movies"
basePath: "/"
tags:
  - name: "Health"
    description: "Endpoints for health check"
  - name: "Movies"
    description: "Endpoints for managing movies"
paths:
  /health:
    get:
      tags:
        - "Health"
      summary: "Health Check API"
      description: "Check the health status of the API."
      responses:
        200:
          description: "Success"
          schema:
            type: "object"
            properties:
              status:
                type: "string"
                description: "Status of the API"
                example: "OK"

  /api/movies:
    post:
      summary: "Add a new movie"
      description: "Add a new movie with title, description, release date, genre, and poster URL."
      tags: [Movies]
      security:
        - apiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Movie'
      responses:
        201:
          description: "Movie created successfully."
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  success:
                    type: "boolean"
                    description: "Indicates whether the request was successful."
                  movie:
                    $ref: '#/components/schemas/Movie'
        500:
          description: "Internal Server Error."
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  success:
                    type: "boolean"
                    description: "Indicates whether the request was successful."
                  error:
                    type: "string"
                    description: "Error message."

    get:
      summary: "Get a list of movies"
      description: "Returns a list of movies"
      tags:
        - Movies
      security:
        - apiKeyAuth: []
      responses:
        200:
          description: "A list of movies"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  success:
                    type: "boolean"
                    description: "Indicates whether the request was successful"
                  movies:
                    type: "array"
                    items:
                      $ref: '#/components/schemas/Movie'

  /api/movies/{id}:
    get:
      summary: "Get a movie by ID"
      description: "Fetches details of a movie by its unique identifier."
      tags: [Movies]
      parameters:
        - in: path
          name: id
          required: true
          description: "ID of the movie to fetch"
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: "Movie details fetched successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Indicates whether the request was successful"
                  movie:
                    $ref: '#/components/schemas/Movie'
        '404':
          description: "Movie not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Indicates whether the request was successful"
                  error:
                    type: string
                    description: "Error message indicating movie not found"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Indicates whether the request was successful"
                  error:
                    type: string
                    description: "Error message indicating internal server error"

    put:
      summary: "Update a movie by ID"
      description: "Updates details of a movie specified by its unique identifier."
      tags: [Movies]
      parameters:
        - in: path
          name: id
          required: true
          description: "ID of the movie to update"
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Movie'
      responses:
        '200':
          description: "Movie updated successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Indicates whether the request was successful"
                  message:
                    type: string
                    description: "Success message indicating movie updated successfully"
        '404':
          description: "Movie not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Indicates whether the request was successful"
                  error:
                    type: string
                    description: "Error message indicating movie not found"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Indicates whether the request was successful"
                  error:
                    type: string
                    description: "Error message indicating internal server error"

    delete:
      summary: "Delete a movie by ID"
      description: "Deletes a movie specified by its unique identifier."
      tags: [Movies]
      parameters:
        - in: path
          name: id
          required: true
          description: "ID of the movie to delete"
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: "Movie deleted successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Indicates whether the request was successful"
                  message:
                    type: string
                    description: "Success message indicating movie deleted successfully"
        '404':
          description: "Movie not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Indicates whether the request was successful"
                  error:
                    type: string
                    description: "Error message indicating movie not found"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Indicates whether the request was successful"
                  error:
                    type: string
                    description: "Error message indicating internal server error"

components:
  schemas:
    Movie:
      type: object
      properties:
        id:
          type: integer
          description: "The unique identifier of the movie"
        rating:
          type: number
          nullable: true
          description: "The rating of the movie"
        title:
          type: string
          description: "The title of the movie"
        description:
          type: string
          description: "A brief description of the movie"
        release_date:
          type: string
          format: date-time
          description: "The release date of the movie"
        genre:
          type: string
          description: "The genre(s) of the movie"
        poster_url:
          type: string
          format: uri
          description: "The URL to the poster image of the movie"
        created_by:
          type: string
          nullable: true
          description: "The creator of the movie entry"
        created_at:
          type: string
          format: date-time
          description: "The creation timestamp of the movie entry"
        updated_at:
          type: string
          format: date-time
          description: "The last update timestamp of the movie entry"
